<?php
include 'MySQLDAO.php';
include 'Security.php';

/**
 * Definition of Class Tb_assunto
 * This class represents a data access object for a database table, it has been automatically
 * generated by Eclipse PHP Class Generator plug-in [https://sourceforge.net/projects/phpclgenerator/]
 * Template name: PHP class generator default template
 * Template filename: /ch/sahits/phpclassgenerator/templates/defaultTemplate.xml
 * Template version: 1.0
 */
class Tb_assunto {

private $dao = null;
private $i = 1;
private $tbAssuntoId  = 0;
private $tbAssuntoNome;


/**
 * Retrieves the value from the field tb_assunto_id
 * @return String with the value of the field
 */
public function getTbAssuntoId(){
	return $this->tbAssuntoId;
}

/**
 * Retrieves the value from the field tb_assunto_nome
 * @return String with the value of the field
 */
public function getTbAssuntoNome(){
	return $this->tbAssuntoNome;
}

/**
 * Set the value from the field tb_assunto_id
 * @param tbAssuntoId String with the value for the field
 */
public function setTbAssuntoId($tbAssuntoId){
	$this->tbAssuntoId = $tbAssuntoId;
}

/**
 * Set the value from the field tb_assunto_nome
 * @param tbAssuntoNome String with the value for the field
 */
public function setTbAssuntoNome($tbAssuntoNome){
	$this->tbAssuntoNome = $tbAssuntoNome;
}

/**
 * Default constructor
 * @param value some value
 */
function __construct($value){

		$this->dao = new MySQLDao("tb_assunto");
		
}

/**
 * Initialize the business object with data read from the DB.
 * @param row array containing one read record.
 */
private function init($row){
	$this->tbAssuntoId = $row['tb_assunto_id'];
	$this->tbAssuntoNome = $row['tb_assunto_nome'];
}

/**
 * Returns the string representation of this obbject
 * @return String repesentation ofTb_assunto
 */
public function toString(){
	$s = '';
	$s .= 'tb_assunto_id: '.$this->tbAssuntoId;
	$s .= 'tb_assunto_nome: '.$this->tbAssuntoNome;
	return $s;
}

/**
 * Returns a HTML representation of this obbject using DIVs for formatting via css
 * @return String HTML representation of the Tb_assunto object
 */
public function toHTMLString(){
	$htmlCode = "<div class=\"tb_assunto\">\n";
	$htmlCode .= '	<div class="tb_assunto_tb_assunto_id">'.$this->tbAssuntoId."</div>\n";
	$htmlCode .= '	<div class="tb_assunto_tb_assunto_nome">'.$this->tbAssuntoNome."</div>\n";
	$htmlCode .= "</div>\n";
	return $htmlCode;
}


public function loadAll(){

	$tb_assunto = new Tb_assunto();
	$rows = $tb_assunto->dao->getData("");
	$tb_assuntos = array();
	for ($index = 0; $index < sizeof($rows); $index++) {
		$d = new Tb_assunto();
		$d->init($rows[$index]);
		array_push($tb_assuntos,$d);
	}
	return $tb_assuntos;
		
}

/**
 * 
 * Load the Tb_assunto uniquely by its primary key.
 * @param tbAssuntoId primary key
 * @return Instance of {@link Tb_assunto}
 */
static function loadUnique($tbAssuntoId){

	$tb_assunto = new Tb_assunto();
	$rows = $tb_assunto->dao->getData("`tb_assunto_id`='$tbAssuntoId'");
	$tb_assunto->init($rows[0]);
	return $tb_assunto;
  	  	
}

/**
 * Insert this object into the DB
 * @return new id (auto increment value) genereated
 */
private function insert(){

	$list = array("tb_assunto_id"=>$this->tbAssuntoId, "tb_assunto_nome"=>$this->tbAssuntoNome);
	return $this->dao->insertRecord($list);	
	
}

/**
 * Update this object into the DB
 * @return number of updated records
 */
private function update(){

	$list = array("tb_assunto_id"=>$this->tbAssuntoId, "tb_assunto_nome"=>$this->tbAssuntoNome);
	$where = "`tb_assunto_id`='$tbAssuntoId'";
	return $this->dao->updateRecord($list,$where);	
	
}

/**
 * Initialize the business object with data read from the DB.
 */
private function initPOST(){
	if (isset($_POST['tbAssuntoId'])){
		$this->tbAssuntoId = $_POST['tbAssuntoId'];
	}
	if (isset($_POST['tbAssuntoNome'])){
		$this->tbAssuntoNome = $_POST['tbAssuntoNome'];
	}
}

/**
 * Initialize the business object with data read from the DB.
 */
private function initGET(){
	if (isset($_GET['tbAssuntoId'])){
		$this->tbAssuntoId = $_GET['tbAssuntoId'];
	}
	if (isset($_GET['tbAssuntoNome'])){
		$this->tbAssuntoNome = $_GET['tbAssuntoNome'];
	}
}
}
?>