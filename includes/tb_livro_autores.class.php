<?php
include 'MySQLDAO.php';
include 'Security.php';

/**
 * Definition of Class Tb_livro_autores
 * This class represents a data access object for a database table, it has been automatically
 * generated by Eclipse PHP Class Generator plug-in [https://sourceforge.net/projects/phpclgenerator/]
 * Template name: PHP class generator default template
 * Template filename: /ch/sahits/phpclassgenerator/templates/defaultTemplate.xml
 * Template version: 1.0
 */
class Tb_livro_autores {

private $dao = null;
private $i = 1;
private $tbLivroAutoresIdlivro  = 0;
private $tbLivroAutoresIdautor  = 0;
private $tbLivroAutoresIdtradutor;


/**
 * Retrieves the value from the field tb_livro_autores_idlivro
 * @return String with the value of the field
 */
public function getTbLivroAutoresIdlivro(){
	return $this->tbLivroAutoresIdlivro;
}

/**
 * Retrieves the value from the field tb_livro_autores_idautor
 * @return String with the value of the field
 */
public function getTbLivroAutoresIdautor(){
	return $this->tbLivroAutoresIdautor;
}

/**
 * Retrieves the value from the field tb_livro_autores_idtradutor
 * @return String with the value of the field
 */
public function getTbLivroAutoresIdtradutor(){
	return $this->tbLivroAutoresIdtradutor;
}

/**
 * Set the value from the field tb_livro_autores_idlivro
 * @param tbLivroAutoresIdlivro String with the value for the field
 */
public function setTbLivroAutoresIdlivro($tbLivroAutoresIdlivro){
	$this->tbLivroAutoresIdlivro = $tbLivroAutoresIdlivro;
}

/**
 * Set the value from the field tb_livro_autores_idautor
 * @param tbLivroAutoresIdautor String with the value for the field
 */
public function setTbLivroAutoresIdautor($tbLivroAutoresIdautor){
	$this->tbLivroAutoresIdautor = $tbLivroAutoresIdautor;
}

/**
 * Set the value from the field tb_livro_autores_idtradutor
 * @param tbLivroAutoresIdtradutor String with the value for the field
 */
public function setTbLivroAutoresIdtradutor($tbLivroAutoresIdtradutor){
	$this->tbLivroAutoresIdtradutor = $tbLivroAutoresIdtradutor;
}

/**
 * Default constructor
 * @param value some value
 */
function __construct($value){

		$this->dao = new MySQLDao("tb_livro_autores");
		
}

/**
 * Initialize the business object with data read from the DB.
 * @param row array containing one read record.
 */
private function init($row){
	$this->tbLivroAutoresIdlivro = $row['tb_livro_autores_idlivro'];
	$this->tbLivroAutoresIdautor = $row['tb_livro_autores_idautor'];
	$this->tbLivroAutoresIdtradutor = $row['tb_livro_autores_idtradutor'];
}

/**
 * Returns the string representation of this obbject
 * @return String repesentation ofTb_livro_autores
 */
public function toString(){
	$s = '';
	$s .= 'tb_livro_autores_idlivro: '.$this->tbLivroAutoresIdlivro;
	$s .= 'tb_livro_autores_idautor: '.$this->tbLivroAutoresIdautor;
	$s .= 'tb_livro_autores_idtradutor: '.$this->tbLivroAutoresIdtradutor;
	return $s;
}

/**
 * Returns a HTML representation of this obbject using DIVs for formatting via css
 * @return String HTML representation of the Tb_livro_autores object
 */
public function toHTMLString(){
	$htmlCode = "<div class=\"tb_livro_autores\">\n";
	$htmlCode .= '	<div class="tb_livro_autores_tb_livro_autores_idlivro">'.$this->tbLivroAutoresIdlivro."</div>\n";
	$htmlCode .= '	<div class="tb_livro_autores_tb_livro_autores_idautor">'.$this->tbLivroAutoresIdautor."</div>\n";
	$htmlCode .= '	<div class="tb_livro_autores_tb_livro_autores_idtradutor">'.$this->tbLivroAutoresIdtradutor."</div>\n";
	$htmlCode .= "</div>\n";
	return $htmlCode;
}


public function loadAll(){

	$tb_livro_autores = new Tb_livro_autores();
	$rows = $tb_livro_autores->dao->getData("");
	$tb_livro_autoress = array();
	for ($index = 0; $index < sizeof($rows); $index++) {
		$d = new Tb_livro_autores();
		$d->init($rows[$index]);
		array_push($tb_livro_autoress,$d);
	}
	return $tb_livro_autoress;
		
}

/**
 * 
 * Load the Tb_livro_autores uniquely by its primary key.
 * @param tbLivroAutoresIdlivro primary key
 * @param tbLivroAutoresIdautor primary key
 * @return Instance of {@link Tb_livro_autores}
 */
static function loadUnique($tbLivroAutoresIdlivro, $tbLivroAutoresIdautor){

	$tb_livro_autores = new Tb_livro_autores();
	$rows = $tb_livro_autores->dao->getData("`tb_livro_autores_idlivro`='$tbLivroAutoresIdlivro' AND `tb_livro_autores_idautor`='$tbLivroAutoresIdautor'");
	$tb_livro_autores->init($rows[0]);
	return $tb_livro_autores;
  	  	
}

/**
 * 
 * Load all records of Tb_livro_autores uniquely by its foreign keys:
 * tb_livro_autores_idlivro
 * @param tbLivroAutoresIdlivro foreign key
 * @return array of Instance of {@link Tb_livro_autores}
 */
public static function loadByFKTb_livro_autores_idlivro($tbLivroAutoresIdlivro){

	$tb_livro_autores = new Tb_livro_autores();
	$rows = $tb_livro_autores->dao->getData("`tb_livro_autores_idlivro`='$tbLivroAutoresIdlivro'");
	$tb_livro_autoress = array();
	for ($index = 0; $index < sizeof($rows); $index++) {
		$d = new Tb_livro_autores();
		$d->init($rows[$index]);
		array_push($tb_livro_autoress,$d);
	}
	return $tb_livro_autoress;
 	  	
}

/**
 * 
 * Load all records of Tb_livro_autores uniquely by its foreign keys:
 * tb_livro_autores_idautor
 * @param tbLivroAutoresIdautor foreign key
 * @return array of Instance of {@link Tb_livro_autores}
 */
public static function loadByFKTb_livro_autores_idautor($tbLivroAutoresIdautor){

	$tb_livro_autores = new Tb_livro_autores();
	$rows = $tb_livro_autores->dao->getData("`tb_livro_autores_idautor`='$tbLivroAutoresIdautor'");
	$tb_livro_autoress = array();
	for ($index = 0; $index < sizeof($rows); $index++) {
		$d = new Tb_livro_autores();
		$d->init($rows[$index]);
		array_push($tb_livro_autoress,$d);
	}
	return $tb_livro_autoress;
 	  	
}

/**
 * 
 * Load all records of Tb_livro_autores uniquely by its foreign keys:
 * tb_livro_autores_idtradutor
 * @param tbLivroAutoresIdtradutor foreign key
 * @return array of Instance of {@link Tb_livro_autores}
 */
public static function loadByFKTb_livro_autores_idtradutor($tbLivroAutoresIdtradutor){

	$tb_livro_autores = new Tb_livro_autores();
	$rows = $tb_livro_autores->dao->getData("`tb_livro_autores_idtradutor`='$tbLivroAutoresIdtradutor'");
	$tb_livro_autoress = array();
	for ($index = 0; $index < sizeof($rows); $index++) {
		$d = new Tb_livro_autores();
		$d->init($rows[$index]);
		array_push($tb_livro_autoress,$d);
	}
	return $tb_livro_autoress;
 	  	
}

/**
 * Insert this object into the DB
 * @return new id (auto increment value) genereated
 */
private function insert(){

	$list = array("tb_livro_autores_idlivro"=>$this->tbLivroAutoresIdlivro, "tb_livro_autores_idautor"=>$this->tbLivroAutoresIdautor, "tb_livro_autores_idtradutor"=>$this->tbLivroAutoresIdtradutor);
	return $this->dao->insertRecord($list);	
	
}

/**
 * Update this object into the DB
 * @return number of updated records
 */
private function update(){

	$list = array("tb_livro_autores_idlivro"=>$this->tbLivroAutoresIdlivro, "tb_livro_autores_idautor"=>$this->tbLivroAutoresIdautor, "tb_livro_autores_idtradutor"=>$this->tbLivroAutoresIdtradutor);
	$where = "`tb_livro_autores_idlivro`='$tbLivroAutoresIdlivro' AND `tb_livro_autores_idautor`='$tbLivroAutoresIdautor'";
	return $this->dao->updateRecord($list,$where);	
	
}

/**
 * Initialize the business object with data read from the DB.
 */
private function initPOST(){
	if (isset($_POST['tbLivroAutoresIdlivro'])){
		$this->tbLivroAutoresIdlivro = $_POST['tbLivroAutoresIdlivro'];
	}
	if (isset($_POST['tbLivroAutoresIdautor'])){
		$this->tbLivroAutoresIdautor = $_POST['tbLivroAutoresIdautor'];
	}
	if (isset($_POST['tbLivroAutoresIdtradutor'])){
		$this->tbLivroAutoresIdtradutor = $_POST['tbLivroAutoresIdtradutor'];
	}
}

/**
 * Initialize the business object with data read from the DB.
 */
private function initGET(){
	if (isset($_GET['tbLivroAutoresIdlivro'])){
		$this->tbLivroAutoresIdlivro = $_GET['tbLivroAutoresIdlivro'];
	}
	if (isset($_GET['tbLivroAutoresIdautor'])){
		$this->tbLivroAutoresIdautor = $_GET['tbLivroAutoresIdautor'];
	}
	if (isset($_GET['tbLivroAutoresIdtradutor'])){
		$this->tbLivroAutoresIdtradutor = $_GET['tbLivroAutoresIdtradutor'];
	}
}
}
?>