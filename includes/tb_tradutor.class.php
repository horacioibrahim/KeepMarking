<?php
include 'MySQLDAO.php';
include 'Security.php';

/**
 * Definition of Class Tb_tradutor
 * This class represents a data access object for a database table, it has been automatically
 * generated by Eclipse PHP Class Generator plug-in [https://sourceforge.net/projects/phpclgenerator/]
 * Template name: PHP class generator default template
 * Template filename: /ch/sahits/phpclassgenerator/templates/defaultTemplate.xml
 * Template version: 1.0
 */
class Tb_tradutor {

private $dao = null;
private $i = 1;
private $tbTradutorId  = 0;
private $tbTradutorNome;
private $tbTradutorSobrenome;
private $tbTradutorDtnasc;
private $tbTradutorCidadenascimento;
private $tbTradutorCidadevive;
private $tbTradutorDtformacao;
private $tbTradutorApresentacaoPessoal;
private $tbTradutorObs;


/**
 * Retrieves the value from the field tb_tradutor_id
 * @return String with the value of the field
 */
public function getTbTradutorId(){
	return $this->tbTradutorId;
}

/**
 * Retrieves the value from the field tb_tradutor_nome
 * @return String with the value of the field
 */
public function getTbTradutorNome(){
	return $this->tbTradutorNome;
}

/**
 * Retrieves the value from the field tb_tradutor_sobrenome
 * @return String with the value of the field
 */
public function getTbTradutorSobrenome(){
	return $this->tbTradutorSobrenome;
}

/**
 * Retrieves the value from the field tb_tradutor_dtnasc
 * @return String with the value of the field
 */
public function getTbTradutorDtnasc(){
	return $this->tbTradutorDtnasc;
}

/**
 * Retrieves the value from the field tb_tradutor_cidadenascimento
 * @return String with the value of the field
 */
public function getTbTradutorCidadenascimento(){
	return $this->tbTradutorCidadenascimento;
}

/**
 * Retrieves the value from the field tb_tradutor_cidadevive
 * @return String with the value of the field
 */
public function getTbTradutorCidadevive(){
	return $this->tbTradutorCidadevive;
}

/**
 * Retrieves the value from the field tb_tradutor_dtformacao
 * @return String with the value of the field
 */
public function getTbTradutorDtformacao(){
	return $this->tbTradutorDtformacao;
}

/**
 * Retrieves the value from the field tb_tradutor_apresentacao_pessoal
 * @return String with the value of the field
 */
public function getTbTradutorApresentacaoPessoal(){
	return $this->tbTradutorApresentacaoPessoal;
}

/**
 * Retrieves the value from the field tb_tradutor_obs
 * @return String with the value of the field
 */
public function getTbTradutorObs(){
	return $this->tbTradutorObs;
}

/**
 * Set the value from the field tb_tradutor_id
 * @param tbTradutorId String with the value for the field
 */
public function setTbTradutorId($tbTradutorId){
	$this->tbTradutorId = $tbTradutorId;
}

/**
 * Set the value from the field tb_tradutor_nome
 * @param tbTradutorNome String with the value for the field
 */
public function setTbTradutorNome($tbTradutorNome){
	$this->tbTradutorNome = $tbTradutorNome;
}

/**
 * Set the value from the field tb_tradutor_sobrenome
 * @param tbTradutorSobrenome String with the value for the field
 */
public function setTbTradutorSobrenome($tbTradutorSobrenome){
	$this->tbTradutorSobrenome = $tbTradutorSobrenome;
}

/**
 * Set the value from the field tb_tradutor_dtnasc
 * @param tbTradutorDtnasc String with the value for the field
 */
public function setTbTradutorDtnasc($tbTradutorDtnasc){
	$this->tbTradutorDtnasc = $tbTradutorDtnasc;
}

/**
 * Set the value from the field tb_tradutor_cidadenascimento
 * @param tbTradutorCidadenascimento String with the value for the field
 */
public function setTbTradutorCidadenascimento($tbTradutorCidadenascimento){
	$this->tbTradutorCidadenascimento = $tbTradutorCidadenascimento;
}

/**
 * Set the value from the field tb_tradutor_cidadevive
 * @param tbTradutorCidadevive String with the value for the field
 */
public function setTbTradutorCidadevive($tbTradutorCidadevive){
	$this->tbTradutorCidadevive = $tbTradutorCidadevive;
}

/**
 * Set the value from the field tb_tradutor_dtformacao
 * @param tbTradutorDtformacao String with the value for the field
 */
public function setTbTradutorDtformacao($tbTradutorDtformacao){
	$this->tbTradutorDtformacao = $tbTradutorDtformacao;
}

/**
 * Set the value from the field tb_tradutor_apresentacao_pessoal
 * @param tbTradutorApresentacaoPessoal String with the value for the field
 */
public function setTbTradutorApresentacaoPessoal($tbTradutorApresentacaoPessoal){
	$this->tbTradutorApresentacaoPessoal = $tbTradutorApresentacaoPessoal;
}

/**
 * Set the value from the field tb_tradutor_obs
 * @param tbTradutorObs String with the value for the field
 */
public function setTbTradutorObs($tbTradutorObs){
	$this->tbTradutorObs = $tbTradutorObs;
}

/**
 * Default constructor
 * @param value some value
 */
function __construct($value){

		$this->dao = new MySQLDao("tb_tradutor");
		
}

/**
 * Initialize the business object with data read from the DB.
 * @param row array containing one read record.
 */
private function init($row){
	$this->tbTradutorId = $row['tb_tradutor_id'];
	$this->tbTradutorNome = $row['tb_tradutor_nome'];
	$this->tbTradutorSobrenome = $row['tb_tradutor_sobrenome'];
	$this->tbTradutorDtnasc = $row['tb_tradutor_dtnasc'];
	$this->tbTradutorCidadenascimento = $row['tb_tradutor_cidadenascimento'];
	$this->tbTradutorCidadevive = $row['tb_tradutor_cidadevive'];
	$this->tbTradutorDtformacao = $row['tb_tradutor_dtformacao'];
	$this->tbTradutorApresentacaoPessoal = $row['tb_tradutor_apresentacao_pessoal'];
	$this->tbTradutorObs = $row['tb_tradutor_obs'];
}

/**
 * Returns the string representation of this obbject
 * @return String repesentation ofTb_tradutor
 */
public function toString(){
	$s = '';
	$s .= 'tb_tradutor_id: '.$this->tbTradutorId;
	$s .= 'tb_tradutor_nome: '.$this->tbTradutorNome;
	$s .= 'tb_tradutor_sobrenome: '.$this->tbTradutorSobrenome;
	$s .= 'tb_tradutor_dtnasc: '.$this->tbTradutorDtnasc;
	$s .= 'tb_tradutor_cidadenascimento: '.$this->tbTradutorCidadenascimento;
	$s .= 'tb_tradutor_cidadevive: '.$this->tbTradutorCidadevive;
	$s .= 'tb_tradutor_dtformacao: '.$this->tbTradutorDtformacao;
	$s .= 'tb_tradutor_apresentacao_pessoal: '.$this->tbTradutorApresentacaoPessoal;
	$s .= 'tb_tradutor_obs: '.$this->tbTradutorObs;
	return $s;
}

/**
 * Returns a HTML representation of this obbject using DIVs for formatting via css
 * @return String HTML representation of the Tb_tradutor object
 */
public function toHTMLString(){
	$htmlCode = "<div class=\"tb_tradutor\">\n";
	$htmlCode .= '	<div class="tb_tradutor_tb_tradutor_id">'.$this->tbTradutorId."</div>\n";
	$htmlCode .= '	<div class="tb_tradutor_tb_tradutor_nome">'.$this->tbTradutorNome."</div>\n";
	$htmlCode .= '	<div class="tb_tradutor_tb_tradutor_sobrenome">'.$this->tbTradutorSobrenome."</div>\n";
	$htmlCode .= '	<div class="tb_tradutor_tb_tradutor_dtnasc">'.$this->tbTradutorDtnasc."</div>\n";
	$htmlCode .= '	<div class="tb_tradutor_tb_tradutor_cidadenascimento">'.$this->tbTradutorCidadenascimento."</div>\n";
	$htmlCode .= '	<div class="tb_tradutor_tb_tradutor_cidadevive">'.$this->tbTradutorCidadevive."</div>\n";
	$htmlCode .= '	<div class="tb_tradutor_tb_tradutor_dtformacao">'.$this->tbTradutorDtformacao."</div>\n";
	$htmlCode .= '	<div class="tb_tradutor_tb_tradutor_apresentacao_pessoal">'.$this->tbTradutorApresentacaoPessoal."</div>\n";
	$htmlCode .= '	<div class="tb_tradutor_tb_tradutor_obs">'.$this->tbTradutorObs."</div>\n";
	$htmlCode .= "</div>\n";
	return $htmlCode;
}


public function loadAll(){

	$tb_tradutor = new Tb_tradutor();
	$rows = $tb_tradutor->dao->getData("");
	$tb_tradutors = array();
	for ($index = 0; $index < sizeof($rows); $index++) {
		$d = new Tb_tradutor();
		$d->init($rows[$index]);
		array_push($tb_tradutors,$d);
	}
	return $tb_tradutors;
		
}

/**
 * 
 * Load the Tb_tradutor uniquely by its primary key.
 * @param tbTradutorId primary key
 * @return Instance of {@link Tb_tradutor}
 */
static function loadUnique($tbTradutorId){

	$tb_tradutor = new Tb_tradutor();
	$rows = $tb_tradutor->dao->getData("`tb_tradutor_id`='$tbTradutorId'");
	$tb_tradutor->init($rows[0]);
	return $tb_tradutor;
  	  	
}

/**
 * 
 * Load all records of Tb_tradutor uniquely by its foreign keys:
 * tb_tradutor_cidadenascimento
 * @param tbTradutorCidadenascimento foreign key
 * @return array of Instance of {@link Tb_tradutor}
 */
public static function loadByFKTb_tradutor_cidadenascimento($tbTradutorCidadenascimento){

	$tb_tradutor = new Tb_tradutor();
	$rows = $tb_tradutor->dao->getData("`tb_tradutor_cidadenascimento`='$tbTradutorCidadenascimento'");
	$tb_tradutors = array();
	for ($index = 0; $index < sizeof($rows); $index++) {
		$d = new Tb_tradutor();
		$d->init($rows[$index]);
		array_push($tb_tradutors,$d);
	}
	return $tb_tradutors;
 	  	
}

/**
 * 
 * Load all records of Tb_tradutor uniquely by its foreign keys:
 * tb_tradutor_cidadevive
 * @param tbTradutorCidadevive foreign key
 * @return array of Instance of {@link Tb_tradutor}
 */
public static function loadByFKTb_tradutor_cidadevive($tbTradutorCidadevive){

	$tb_tradutor = new Tb_tradutor();
	$rows = $tb_tradutor->dao->getData("`tb_tradutor_cidadevive`='$tbTradutorCidadevive'");
	$tb_tradutors = array();
	for ($index = 0; $index < sizeof($rows); $index++) {
		$d = new Tb_tradutor();
		$d->init($rows[$index]);
		array_push($tb_tradutors,$d);
	}
	return $tb_tradutors;
 	  	
}

/**
 * Insert this object into the DB
 * @return new id (auto increment value) genereated
 */
private function insert(){

	$list = array("tb_tradutor_id"=>$this->tbTradutorId, "tb_tradutor_nome"=>$this->tbTradutorNome, "tb_tradutor_sobrenome"=>$this->tbTradutorSobrenome, "tb_tradutor_dtnasc"=>$this->tbTradutorDtnasc, "tb_tradutor_cidadenascimento"=>$this->tbTradutorCidadenascimento, "tb_tradutor_cidadevive"=>$this->tbTradutorCidadevive, "tb_tradutor_dtformacao"=>$this->tbTradutorDtformacao, "tb_tradutor_apresentacao_pessoal"=>$this->tbTradutorApresentacaoPessoal, "tb_tradutor_obs"=>$this->tbTradutorObs);
	return $this->dao->insertRecord($list);	
	
}

/**
 * Update this object into the DB
 * @return number of updated records
 */
private function update(){

	$list = array("tb_tradutor_id"=>$this->tbTradutorId, "tb_tradutor_nome"=>$this->tbTradutorNome, "tb_tradutor_sobrenome"=>$this->tbTradutorSobrenome, "tb_tradutor_dtnasc"=>$this->tbTradutorDtnasc, "tb_tradutor_cidadenascimento"=>$this->tbTradutorCidadenascimento, "tb_tradutor_cidadevive"=>$this->tbTradutorCidadevive, "tb_tradutor_dtformacao"=>$this->tbTradutorDtformacao, "tb_tradutor_apresentacao_pessoal"=>$this->tbTradutorApresentacaoPessoal, "tb_tradutor_obs"=>$this->tbTradutorObs);
	$where = "`tb_tradutor_id`='$tbTradutorId'";
	return $this->dao->updateRecord($list,$where);	
	
}

/**
 * Initialize the business object with data read from the DB.
 */
private function initPOST(){
	if (isset($_POST['tbTradutorId'])){
		$this->tbTradutorId = $_POST['tbTradutorId'];
	}
	if (isset($_POST['tbTradutorNome'])){
		$this->tbTradutorNome = $_POST['tbTradutorNome'];
	}
	if (isset($_POST['tbTradutorSobrenome'])){
		$this->tbTradutorSobrenome = $_POST['tbTradutorSobrenome'];
	}
	if (isset($_POST['tbTradutorDtnasc'])){
		$this->tbTradutorDtnasc = $_POST['tbTradutorDtnasc'];
	}
	if (isset($_POST['tbTradutorCidadenascimento'])){
		$this->tbTradutorCidadenascimento = $_POST['tbTradutorCidadenascimento'];
	}
	if (isset($_POST['tbTradutorCidadevive'])){
		$this->tbTradutorCidadevive = $_POST['tbTradutorCidadevive'];
	}
	if (isset($_POST['tbTradutorDtformacao'])){
		$this->tbTradutorDtformacao = $_POST['tbTradutorDtformacao'];
	}
	if (isset($_POST['tbTradutorApresentacaoPessoal'])){
		$this->tbTradutorApresentacaoPessoal = $_POST['tbTradutorApresentacaoPessoal'];
	}
	if (isset($_POST['tbTradutorObs'])){
		$this->tbTradutorObs = $_POST['tbTradutorObs'];
	}
}

/**
 * Initialize the business object with data read from the DB.
 */
private function initGET(){
	if (isset($_GET['tbTradutorId'])){
		$this->tbTradutorId = $_GET['tbTradutorId'];
	}
	if (isset($_GET['tbTradutorNome'])){
		$this->tbTradutorNome = $_GET['tbTradutorNome'];
	}
	if (isset($_GET['tbTradutorSobrenome'])){
		$this->tbTradutorSobrenome = $_GET['tbTradutorSobrenome'];
	}
	if (isset($_GET['tbTradutorDtnasc'])){
		$this->tbTradutorDtnasc = $_GET['tbTradutorDtnasc'];
	}
	if (isset($_GET['tbTradutorCidadenascimento'])){
		$this->tbTradutorCidadenascimento = $_GET['tbTradutorCidadenascimento'];
	}
	if (isset($_GET['tbTradutorCidadevive'])){
		$this->tbTradutorCidadevive = $_GET['tbTradutorCidadevive'];
	}
	if (isset($_GET['tbTradutorDtformacao'])){
		$this->tbTradutorDtformacao = $_GET['tbTradutorDtformacao'];
	}
	if (isset($_GET['tbTradutorApresentacaoPessoal'])){
		$this->tbTradutorApresentacaoPessoal = $_GET['tbTradutorApresentacaoPessoal'];
	}
	if (isset($_GET['tbTradutorObs'])){
		$this->tbTradutorObs = $_GET['tbTradutorObs'];
	}
}
}
?>